# Generated by Django 2.2.5 on 2020-11-24 13:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Base',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_name', models.CharField(max_length=128)),
                ('password', models.CharField(default='0000', max_length=32)),
                ('password2', models.CharField(default='1111', max_length=32)),
                ('administrator', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=32)),
                ('password', models.CharField(default=0, max_length=32)),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Base')),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('use_base', models.IntegerField(blank=True, default=None, null=True)),
                ('person', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=32)),
                ('tarclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Classes')),
            ],
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('use_base', models.IntegerField(blank=True, default=None, null=True)),
                ('person', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('contents', models.TextField()),
                ('make', models.DateField(default=django.utils.timezone.now)),
                ('auther', models.ManyToManyField(to='blog.Teachers')),
                ('tag', models.ManyToManyField(blank=True, to='blog.Tags')),
                ('tarclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Classes')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit', models.DateField()),
                ('finish', models.BooleanField(default=False)),
                ('result', models.BooleanField(default=False)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Students')),
                ('task', models.ManyToManyField(to='blog.Tasks')),
            ],
        ),
        migrations.AddField(
            model_name='classes',
            name='students',
            field=models.ManyToManyField(blank=True, to='blog.Students'),
        ),
        migrations.AddField(
            model_name='classes',
            name='teachers',
            field=models.ManyToManyField(to='blog.Teachers'),
        ),
        migrations.AddField(
            model_name='base',
            name='students',
            field=models.ManyToManyField(blank=True, to='blog.Students'),
        ),
        migrations.AddField(
            model_name='base',
            name='teachers',
            field=models.ManyToManyField(to='blog.Teachers'),
        ),
    ]
